{"version":3,"sources":["components/Menu.js","images/undraw_files_6b3d.svg","components/Main.js","images/undraw_personal_information_962o.svg","components/PersonalInfo.js","images/undraw_road_to_knowledge_m8s0.svg","components/Education.js","images/undraw_Work_time_re_hdyv.svg","components/WorkExperiences.js","App.js","index.js"],"names":["Menu","toggleMenu","sideMenu","document","querySelector","window","innerWidth","classList","toggle","applyListItemEffect","ev","target","tagName","toLowerCase","querySelectorAll","forEach","listItem","remove","add","showPersonalInfo","MainComponent","PersonalInfoComponent","EducationComponent","WorkComponent","textContent","this","className","href","xmlns","width","height","viewBox","d","onClick","Component","Main","src","MainImage","alt","PersonalInfo","toggleModal","closeBtn","InfoModal","infoBody","setState","personalInfo","initialPersonalInfoState","errors","initialErrorsState","handleChange","state","name","value","validate","isError","firstName","firstNameError","lastName","lastNameError","role","roleError","address","addressError","phoneNumber","length","test","phoneNumberError","email","includes","emailError","Object","keys","constructor","handleSubmit","preventDefault","isSubmitted","InfoImage","type","onChange","maxLength","Education","EducationModal","EducationBody","secondaryAddEducationBtn","input","education","regExp","school","getElementById","city","startDate","endDate","degree","addItem","eduItem","description","toggleEditModal","isEdited","itemId","currentTarget","parentNode","getAttribute","tempEduItem","eduItemId","handleEditChange","id","editArray","arr","editedObj","editItem","deleteItem","filterArray","index","splice","map","item","EducationImg","rows","WorkExperiences","workModal","workBody","secondaryAddWorkBtn","works","companyName","workCity","workStartDate","workEndDate","workItem","workDescr","tempWorkItem","workItemId","WorkImg","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.443990d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Menu extends Component {\n    toggleMenu = () => {\n        const sideMenu = document.querySelector('.Menu');\n        if (window.innerWidth <= 966) {\n            sideMenu.classList.toggle('side-menu-active');\n        } else return;\n    }\n\n    applyListItemEffect = (ev) => {\n        if (ev.target.tagName.toLowerCase() === 'li') {\n            const listItems = document.querySelectorAll('.menu-body ul li');\n            listItems.forEach(listItem => {\n                listItem.classList.remove('focus-list-element');\n            })\n            ev.target.classList.add('focus-list-element');\n        }\n    }\n\n    showPersonalInfo = (ev) => {\n        const MainComponent = document.querySelector('.Main');\n        const PersonalInfoComponent = document.querySelector('.PersonalInfo');\n        const EducationComponent = document.querySelector('.Education');\n        const WorkComponent = document.querySelector('.WorkExp');\n\n        if (ev.target.textContent === 'Personal Info') {\n            PersonalInfoComponent.classList.remove('not-visible');\n            EducationComponent.classList.add('not-visible');\n            WorkComponent.classList.add('not-visible');\n        } else if (ev.target.textContent === 'Education') {\n            PersonalInfoComponent.classList.add('not-visible');\n            EducationComponent.classList.remove('not-visible');\n            WorkComponent.classList.add('not-visible');\n        } else if (ev.target.textContent === 'Work Experiences') {\n            PersonalInfoComponent.classList.add('not-visible');\n            EducationComponent.classList.add('not-visible');\n            WorkComponent.classList.remove('not-visible');\n        }\n        MainComponent.classList.add('not-visible');\n    }\n\n    render() {\n        const {\n            toggleMenu,\n            applyListItemEffect,\n            showPersonalInfo\n        } = this;\n        return (\n            <div className=\"Menu\">\n                <div className=\"menu-header\">\n                    <h1>CV-Builder</h1>\n                    <a href=\"https://github.com/FraCav99/cv-project\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\n                    </a>\n                </div>\n                <div className=\"menu-body\" onClick={(ev) => {applyListItemEffect(ev); showPersonalInfo(ev)}}>\n                    <ul>\n                        <li onClick={toggleMenu}>Personal Info</li>\n                        <li onClick={toggleMenu}>Education</li>\n                        <li onClick={toggleMenu}>Work Experiences</li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/undraw_files_6b3d.6cf1bf2f.svg\";","import React, { Component } from 'react';\nimport MainImage from '../images/undraw_files_6b3d.svg';\n\nclass Main extends Component {\n    toggleMenu = () => {\n        const sideMenu = document.querySelector('.Menu');\n        sideMenu.classList.toggle('side-menu-active');\n    }\n\n    render() {\n        const {toggleMenu} = this;\n        return (\n            <div className=\"Main\">\n                <div className=\"main-header\">\n                    <div className=\"burger-menu\" onClick={toggleMenu}>\n                        <span className=\"line line-1\"></span>\n                        <span className=\"line line-2\"></span>\n                        <span className=\"line line-3\"></span>\n                    </div>\n                </div>\n                <div className=\"main-body\">\n                    <div className=\"image-container\">\n                        <img src={MainImage} alt=\"main-img\"/>\n                    </div>\n                    <div className=\"text-content\">\n                        <p>Start building your CV!</p>\n                        <p>Select one index from the side menu.</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/undraw_personal_information_962o.42177c18.svg\";","import React, { Component } from 'react';\nimport InfoImage from '../images/undraw_personal_information_962o.svg';\n\nclass PersonalInfo extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            personalInfo: {\n                firstName: '',\n                lastName: '',\n                role: '',\n                address: '',\n                phoneNumber: '',\n                email: ''\n            },\n            errors: {},\n            isSubmitted: false\n        }\n\n        this.initialErrorsState = this.state.errors;\n        this.initialPersonalInfoState = this.state.personalInfo;\n    }\n\n    toggleMenu = () => {\n        const sideMenu = document.querySelector('.Menu');\n        sideMenu.classList.toggle('side-menu-active');\n    }\n\n    toggleModal = () => {\n        const closeBtn = document.querySelector('.close-button-info');\n        const InfoModal = document.querySelector('.personal-info-modal');\n        const infoBody = document.querySelector('.info-body');\n\n        // Reset State\n        this.setState({\n            personalInfo: this.initialPersonalInfoState,\n            errors: this.initialErrorsState\n        });\n\n        closeBtn.classList.toggle('not-visible');\n        InfoModal.classList.toggle('not-visible');\n        infoBody.classList.toggle('not-visible');\n    }\n\n    handleChange = (ev) => {\n        this.setState({\n            personalInfo: {\n                ...this.state.personalInfo,    // leave other value unchanged\n                [ev.target.name]: ev.target.value,  // update the current value\n            }\n        });\n    }\n\n    validate = () => {\n        let isError = false;\n        const {personalInfo} = this.state;\n        const errors = {};\n        const regExp = /[a-zA-Z]/g; // check for characters in a string\n\n        if (!personalInfo.firstName) {\n            isError = true;\n            errors.firstNameError = 'Cannot be empty';\n        }\n        if (!personalInfo.lastName) {\n            isError = true;\n            errors.lastNameError = 'Cannot be empty';\n        }\n        if (!personalInfo.role) {\n            isError = true;\n            errors.roleError = 'Cannot be empty';\n        }\n        if (!personalInfo.address) {\n            isError = true;\n            errors.addressError = 'Cannot be empty';\n        }\n        if (!personalInfo.phoneNumber || !personalInfo.phoneNumber.length === 10 || regExp.test(personalInfo.phoneNumber)) {\n            isError = true;\n            errors.phoneNumberError = 'Cannot be empty and must be 10 digits long';\n        }\n        if (!personalInfo.email || !personalInfo.email.includes('@')) {\n            isError = true;\n            errors.emailError = 'Cannot be empty and must contain \"@\"';\n        }\n\n        // Add errors object to state if is not empty\n        if (Object.keys(errors).length > 0 && errors.constructor === Object) {\n            this.setState({errors});\n        }\n\n        return isError;\n    }\n\n    handleSubmit = (ev) => {\n        ev.preventDefault();\n        const {personalInfo} = this.state;\n        const err = this.validate();\n\n        if (!err) {\n            this.setState({personalInfo, isSubmitted: true});   // Update personaliInfo state\n            this.initialPersonalInfoState = personalInfo;   // Update reset personalInfo data\n            this.toggleModal();\n        }\n    }\n\n    render() {\n        const {toggleMenu, toggleModal, handleChange, handleSubmit} = this;\n        const {errors, personalInfo, isSubmitted} = this.state;\n        return (\n            <div className=\"PersonalInfo not-visible\">\n                <div className=\"info-header\">\n                    <div className=\"burger-menu\" onClick={toggleMenu}>\n                        <span className=\"line line-1\"></span>\n                        <span className=\"line line-2\"></span>\n                        <span className=\"line line-3\"></span>\n                    </div>\n                    <h2>Personal Info</h2>\n                    <div className=\"close-button-info not-visible\" onClick={toggleModal}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                    </div>\n                </div>\n\n                {\n                    isSubmitted ? \n                    (\n                        <div className=\"info-body\">\n                            <div className=\"info-container\">\n                                <div className=\"left-panel\">\n                                    <div className=\"first-row\">\n                                        <label>First Name</label>\n                                        <p>{personalInfo.firstName}</p>\n                                    </div>\n                                    <div className=\"second-row\">\n                                        <label>Last Name</label>\n                                        <p>{personalInfo.lastName}</p>\n                                    </div>\n                                    <div className=\"third-row\">\n                                        <label>Role</label>\n                                        <p>{personalInfo.role}</p>\n                                    </div>\n                                </div>\n                                <div className=\"right-panel\">\n                                    <div className=\"first-row\">\n                                        <label>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z\"/></svg>\n                                            Address\n                                        </label>\n                                        <p>{personalInfo.address}</p>\n                                    </div>\n                                    <div className=\"second-row\">\n                                        <label>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M17.5 2c.276 0 .5.224.5.5v19c0 .276-.224.5-.5.5h-11c-.276 0-.5-.224-.5-.5v-19c0-.276.224-.5.5-.5h11zm2.5 0c0-1.104-.896-2-2-2h-12c-1.104 0-2 .896-2 2v20c0 1.104.896 2 2 2h12c1.104 0 2-.896 2-2v-20zm-9.5 1h3c.276 0 .5.224.5.501 0 .275-.224.499-.5.499h-3c-.275 0-.5-.224-.5-.499 0-.277.225-.501.5-.501zm1.5 18c-.553 0-1-.448-1-1s.447-1 1-1c.552 0 .999.448.999 1s-.447 1-.999 1zm5-3h-10v-13h10v13z\"/></svg>\n                                            Phone Number\n                                        </label>\n                                        <p>{personalInfo.phoneNumber}</p>\n                                    </div>\n                                    <div className=\"third-row\">\n                                        <label>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\"/></svg>\n                                            Email\n                                        </label>\n                                        <p>{personalInfo.email}</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"button-container\">\n                                <button className=\"add-info-btn\" onClick={toggleModal}>Edit info</button>\n                            </div>\n                        </div>\n                    ) : \n                    (\n                        <div className=\"info-body\">\n                            <div className=\"image-container\">\n                                <img src={InfoImage} alt=\"Personal-info-img\" />\n                            </div>\n                            <div className=\"button-container\">\n                                <button className=\"add-info-btn\" onClick={toggleModal}>Add info</button>\n                            </div>\n                        </div>\n                    )\n                }\n\n                <div className=\"personal-info-modal not-visible\">\n                    <form>\n                        <div>\n                            <label>First Name</label>\n                            {errors.firstNameError && <small className=\"error-pop-up\">{errors.firstNameError}</small>}\n                            <input type=\"text\" className=\"input-field\" value={personalInfo.firstName} onChange={handleChange} name=\"firstName\" />\n                        </div>\n\n                        <div>\n                            <label>Last Name</label>\n                            {errors.lastNameError && <small className=\"error-pop-up\">{errors.lastNameError}</small>}\n                            <input type=\"text\" className=\"input-field\" value={personalInfo.lastName} onChange={handleChange} name=\"lastName\" />\n                        </div>\n\n                        <div>\n                            <label>Role</label>\n                            {errors.roleError && <small className=\"error-pop-up\">{errors.roleError}</small>}\n                            <input type=\"text\" className=\"input-field\" value={personalInfo.role} onChange={handleChange} name=\"role\" />\n                        </div>\n\n                        <div>\n                            <label>Address</label>\n                            {errors.addressError && <small className=\"error-pop-up\">{errors.addressError}</small>}\n                            <input type=\"text\" className=\"input-field\" value={personalInfo.address} onChange={handleChange} name=\"address\" />\n                        </div>\n\n                        <div>\n                            <label>Phone Number</label>\n                            {errors.phoneNumberError && <small className=\"error-pop-up\">{errors.phoneNumberError}</small>}\n                            <input type=\"text\" name=\"phoneNumber\"  maxLength=\"10\" value={personalInfo.phoneNumber} onChange={handleChange} className=\"input-field\" />\n                        </div>\n\n                        <div>\n                            <label>Email</label>\n                            {errors.emailError && <small className=\"error-pop-up\">{errors.emailError}</small>}\n                            <input type=\"text\" name=\"email\" className=\"input-field\" value={personalInfo.email} onChange={handleChange} />\n                        </div>\n                        \n                        {\n                            isSubmitted ? \n                            <button type=\"submit\" onClick={handleSubmit}>Edit info</button> :\n                            <button type=\"submit\" onClick={handleSubmit}>Add info</button>\n                        }\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PersonalInfo;\n","export default __webpack_public_path__ + \"static/media/undraw_road_to_knowledge_m8s0.63ca498e.svg\";","import React, { Component } from 'react';\nimport EducationImg from '../images/undraw_road_to_knowledge_m8s0.svg';\n\nclass Education extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            education: [],\n            eduItemId: '',\n            tempEduItem: {},\n            isEdited: false,\n            errors: {}\n        }\n    }\n\n    toggleMenu = () => {\n        const sideMenu = document.querySelector('.Menu');\n        sideMenu.classList.toggle('side-menu-active');\n    }\n\n    toggleModal = () => {\n        const closeBtn = document.querySelector('.close-button-education');\n        const EducationModal = document.querySelector('.education-modal');\n        const EducationBody = document.querySelector('.education-body');\n        const secondaryAddEducationBtn = document.querySelector('.add-education-btn');\n\n        // Reset input fields\n        const inputFields = document.querySelectorAll('.input-field');\n        inputFields.forEach(input => input.value = '');\n\n        //Reset State\n        this.setState({errors: {}});\n\n        closeBtn.classList.toggle('not-visible');\n        EducationModal.classList.toggle('not-visible');\n        EducationBody.classList.toggle('not-visible');\n\n        // Conditionally render the secondary \"add\" button\n        if (this.state.education.length > 0) {\n            secondaryAddEducationBtn.classList.toggle('not-visible');\n        }\n    }\n\n    validate = () => {\n        let isError = false;\n        const errors = {};\n        const regExp = /[a-zA-Z]/g; // check for characters in a string\n\n        const school = document.getElementById('school').value;\n        const city = document.getElementById('city').value;\n        const startDate = document.getElementById('startDate').value;\n        const endDate = document.getElementById('endDate').value;\n        const degree = document.getElementById('degree').value;\n\n        if (!school) {\n            isError = true;\n            errors.school = 'Cannot be empty';\n        }\n        if (!city) {\n            isError = true;\n            errors.city = 'Cannot be empty';\n        }\n        if (!startDate || regExp.test(startDate) || startDate.length < 4) {\n            isError = true;\n            errors.startDate = 'Cannot be empty and must be at least 4 digits long';\n        }\n        if (regExp.test(endDate)) {\n            isError = true;\n            errors.endDate = 'Must be at least 4 digits long and must contains digits';\n        }\n        if (!degree) {\n            isError = true;\n            errors.degree = 'Cannot be empty';\n        }\n\n        // Add errors object to state if is not empty\n        if (Object.keys(errors).length > 0 && errors.constructor === Object) {\n            this.setState({errors});\n        }\n\n        return isError;\n    }\n\n    /* Add */\n    addItem = (ev) => {\n        ev.preventDefault();\n        const eduItem = {};\n        const err = this.validate();\n\n        if (!err) {\n            eduItem.school = document.getElementById('school').value;\n            eduItem.city = document.getElementById('city').value;\n            eduItem.startDate = document.getElementById('startDate').value;\n            eduItem.endDate = document.getElementById('endDate').value;\n            eduItem.degree = document.getElementById('degree').value;\n            eduItem.description = document.getElementById('description').value;\n    \n            this.setState({\n                education: [...this.state.education, eduItem],\n            });\n\n            this.toggleModal();\n        } else return;\n    }\n\n    /* Edit */\n    toggleEditModal = (ev) => {\n        const {education, isEdited} = this.state;\n        const itemId = ev.currentTarget.parentNode.parentNode.parentNode.getAttribute('id');\n\n        if (isEdited) {\n            this.setState({\n                tempEduItem: {},\n                isEdited: false,\n                eduItemId: ''\n            });\n        } else {\n            this.setState({\n                tempEduItem: education[itemId],\n                isEdited: true,\n                eduItemId: itemId\n            });\n        }\n\n        this.toggleModal();\n    }\n\n    handleEditChange = ev => {\n        this.setState({\n            tempEduItem: {\n                ...this.state.tempEduItem,\n                [ev.target.id]: ev.target.value\n            }\n        });\n    }\n\n    editArray = (arr, id, editedObj) => {\n        arr[id] = editedObj;\n        return arr;\n    }\n\n    editItem = (ev) => {\n        ev.preventDefault();\n        const err = this.validate();\n\n        if (!err) {\n            const {education, tempEduItem, eduItemId} = this.state;\n            this.setState({\n                isEdited: false,\n                education: this.editArray(education, eduItemId, tempEduItem)\n            });\n            this.toggleModal();\n        } else return;\n    }\n\n    /* Delete */\n    filterArray(arr, index) {\n        index > -1 && arr.splice(index, 1);\n        return arr;\n    }\n\n    deleteItem = (ev) => {\n        const {education} = this.state;\n        const itemId = ev.currentTarget.parentNode.parentNode.parentNode.getAttribute('id');\n        this.setState({\n            education: this.filterArray(education, itemId)\n        });\n    }\n\n    render() {\n        const {\n            toggleMenu,\n            toggleModal,\n            toggleEditModal,\n            addItem,\n            handleEditChange,\n            editItem,\n            deleteItem\n        } = this;\n        const {errors, education, tempEduItem, isEdited} = this.state;\n        return (\n            <div className=\"Education not-visible\">\n                <div className=\"education-header\">\n                    <div className=\"burger-menu\" onClick={toggleMenu}>\n                        <span className=\"line line-1\"></span>\n                        <span className=\"line line-2\"></span>\n                        <span className=\"line line-3\"></span>\n                    </div>\n                    <h2>Education</h2>\n                    {\n                        isEdited ?\n                        <div className=\"close-button-education not-visible\" onClick={toggleEditModal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                        </div> :\n                        <div className=\"close-button-education not-visible\" onClick={toggleModal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                        </div>\n                    }\n                </div>\n\n            \n                {education.length > 0 ? (\n                    <div className=\"education-body\">\n                        {education.map((item, index) => {\n                            return (\n                                <div key={index} id={index} className=\"education-item\">\n                                <div className=\"item-header\">\n                                    <span>{item.startDate}-{item.endDate || 'Present'}</span>\n                                    <div className=\"action-buttons\">\n                                        <svg onClick={toggleEditModal} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M7.127 22.564l-7.126 1.436 1.438-7.125 5.688 5.689zm-4.274-7.104l5.688 5.689 15.46-15.46-5.689-5.689-15.459 15.46z\"/></svg>\n                                        <svg onClick={deleteItem} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                                    </div>\n                                </div>\n                                <div className=\"item-main\">\n                                    <p className=\"degree-title\">{item.degree}</p>\n                                    <p className=\"location\">{item.city}, {item.school}</p>\n                                </div>\n                                <div className=\"item-description\">\n                                    <p>{item.description}</p>\n                                </div>\n                            </div>\n                            )\n                        })}\n                    </div>\n                ) : (\n                    <div className=\"education-body\">\n                        <div className=\"image-container\">\n                            <img src={EducationImg} alt=\"education-experience\" />\n                        </div>\n                        <div className=\"button-container\">\n                            <button onClick={toggleModal}>Add Education</button>\n                        </div>\n                    </div>\n                )}\n\n                <div className=\"education-modal not-visible\">\n                    <form>\n                        <div>\n                            <label>School</label>\n                            {errors.school && <small className=\"error-pop-up\">{errors.school}</small>}\n                            {\n                                isEdited ? \n                                <input type=\"text\" id=\"school\" onChange={handleEditChange} value={tempEduItem.school} className=\"input-field\"/> :\n                                <input type=\"text\" id=\"school\" className=\"input-field\"/>\n                            }                            \n                        </div>\n\n                        <div>\n                            <label>City</label>\n                            {errors.city && <small className=\"error-pop-up\">{errors.city}</small>}\n                            {\n                                isEdited ?\n                                <input type=\"text\" id=\"city\" onChange={handleEditChange} value={tempEduItem.city} className=\"input-field\"/> :\n                                <input type=\"text\" id=\"city\" className=\"input-field\"/>\n                            }\n                        </div>\n\n                        <div className=\"period\">\n                            <div>\n                                <label>From</label>\n                                {errors.startDate && <small className=\"error-pop-up\">{errors.startDate}</small>}\n                                {\n                                    isEdited ?\n                                    <input type=\"text\" id=\"startDate\" onChange={handleEditChange} value={tempEduItem.startDate} className=\"input-field\"/> :\n                                    <input type=\"text\" id=\"startDate\" className=\"input-field\"/>\n                                }\n                            </div>\n                            <div>\n                                <label>\n                                    To\n                                    <small> (\"Present\" if empty)</small>\n                                </label>\n                                {errors.endDate && <small className=\"error-pop-up\">{errors.endDate}</small>}\n                                {\n                                    isEdited ?\n                                    <input \n                                        type=\"text\" \n                                        id=\"endDate\"\n                                        onChange={handleEditChange}\n                                        value={tempEduItem.endDate !== 'Present' ? tempEduItem.endDate : null} \n                                        className=\"input-field\"\n                                    /> :\n                                    <input type=\"text\" id=\"endDate\" className=\"input-field\"/>\n                                }\n                            </div>\n                        </div>\n\n                        <div>\n                            <label>Degree</label>\n                            {errors.degree && <small className=\"error-pop-up\">{errors.degree}</small>}\n                            {\n                                isEdited ?\n                                <input type=\"text\" id=\"degree\" onChange={handleEditChange} value={tempEduItem.degree} className=\"input-field\"/> :\n                                <input type=\"text\" id=\"degree\" className=\"input-field\"/>\n                            }         \n                        </div>\n\n                        <div className=\"description\">\n                            <label>\n                                Description\n                                <small>(optional)</small>\n                            </label>\n                            {\n                                isEdited ?\n                                <textarea rows=\"7\" id=\"description\" onChange={handleEditChange} value={tempEduItem.description} className=\"input-field\"></textarea> :\n                                <textarea rows=\"7\" id=\"description\" className=\"input-field\"></textarea>\n                            }\n                        </div>\n                        {\n                            isEdited ?\n                            <button type=\"submit\" onClick={editItem}>Edit Education</button> :\n                            <button type=\"submit\" onClick={addItem}>Add Education</button>\n                        }\n                    </form>\n                </div>\n\n                {\n                    education.length > 0 && \n                    <button className=\"add-education-btn\" onClick={toggleModal}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                    </button>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Education\n","export default __webpack_public_path__ + \"static/media/undraw_Work_time_re_hdyv.b820d014.svg\";","import React, { Component } from 'react';\nimport WorkImg from '../images/undraw_Work_time_re_hdyv.svg';\n\nclass WorkExperiences extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            works: [],\n            workItemId: '',\n            tempWorkItem: {},\n            isEdited: false,\n            errors: {}\n        }\n    }\n\n    toggleMenu = () => {\n        const sideMenu = document.querySelector('.Menu');\n        sideMenu.classList.toggle('side-menu-active');\n    }\n\n    toggleModal = () => {\n        const closeBtn = document.querySelector('.close-button-work');\n        const workModal = document.querySelector('.work-modal');\n        const workBody = document.querySelector('.work-body');\n        const secondaryAddWorkBtn = document.querySelector('.add-work-btn');\n\n        // Reset input fields\n        const inputFields = document.querySelectorAll('.work-input-field');\n        inputFields.forEach(input => input.value = '');\n\n        // Reset State\n        this.setState({errors: {}});\n\n        closeBtn.classList.toggle('not-visible');\n        workModal.classList.toggle('not-visible');\n        workBody.classList.toggle('not-visible');\n\n        // Conditionally render the secondary \"add\" button\n        if (this.state.works.length > 0) {\n            secondaryAddWorkBtn.classList.toggle('not-visible');\n        }\n    }\n\n    validate = () => {\n        let isError = false;\n        const errors = {};\n        const regExp = /[a-zA-Z]/g; // check for characters in a string\n\n        const companyName = document.getElementById('companyName').value;\n        const workCity = document.getElementById('workCity').value;\n        const workStartDate = document.getElementById('workStartDate').value;\n        const workEndDate = document.getElementById('workEndDate').value;\n        const role = document.getElementById('role').value;\n\n        if (!companyName) {\n            isError = true;\n            errors.companyName = 'Cannot be empty';\n        }\n        if (!workCity) {\n            isError = true;\n            errors.workCity = 'Cannot be empty';\n        }\n        if (!workStartDate || regExp.test(workStartDate) || workStartDate.length < 4) {\n            isError = true;\n            errors.workStartDate = 'Cannot be empty and must be at least 4 digits long';\n        }\n        if (regExp.test(workEndDate)) {\n            isError = true;\n            errors.workEndDate = 'Must be at least 4 digits long and must contains digits';\n        }\n        if (!role) {\n            isError = true;\n            errors.role = 'Cannot be empty';\n        }\n\n        if (Object.keys(errors).length > 0 && errors.constructor === Object) {\n            this.setState({errors});\n        }\n\n        return isError;\n    }\n\n    /* Add */\n    addItem = ev => {\n        ev.preventDefault();\n        const workItem = {};\n        const err = this.validate();\n\n        if (!err) {\n            workItem.companyName = document.getElementById('companyName').value;\n            workItem.workCity = document.getElementById('workCity').value;\n            workItem.workStartDate = document.getElementById('workStartDate').value;\n            workItem.workEndDate = document.getElementById('workEndDate').value;\n            workItem.role = document.getElementById('role').value;\n            workItem.workDescr = document.getElementById('workDescr').value;\n\n            this.setState({\n                works: [...this.state.works, workItem]\n            });\n\n            this.toggleModal();\n        } else {\n            return;\n        }\n    }\n\n    /* Edit */\n    toggleEditModal = ev => {\n        const {works, isEdited} = this.state;\n        const itemId = ev.currentTarget.parentNode.parentNode.parentNode.getAttribute('id');\n\n        if (isEdited) {\n            this.setState({\n                tempWorkItem: {},\n                isEdited: false,\n                workItemId: ''\n            });\n        } else {\n            this.setState({\n                tempWorkItem: works[itemId],\n                isEdited: true,\n                workItemId: itemId\n            });\n        }\n        \n        this.toggleModal();\n    }\n\n    handleEditChange = ev => {\n        this.setState({\n            tempWorkItem: {\n                ...this.state.tempWorkItem,\n                [ev.target.id]: ev.target.value,\n            }\n        });\n    }\n\n    editArray = (arr, id, editedObj) => {\n        arr[id] = editedObj;\n        return arr;\n    }\n\n    editItem = ev => {\n        ev.preventDefault();\n        const err = this.validate();\n\n        if (!err) {\n            const {works, tempWorkItem, workItemId} = this.state;\n            this.setState({\n                isEdited: false,\n                works: this.editArray(works, workItemId, tempWorkItem),\n            });\n            this.toggleModal();\n        } else {\n            return;\n        }\n    }\n\n    /* Delete */\n    filterArray(arr, index) {\n        index > -1 && arr.splice(index, 1);\n        return arr;\n    }\n\n    deleteItem = ev => {\n        const {works} = this.state;\n        const itemId = ev.currentTarget.parentNode.parentNode.parentNode.getAttribute('id');\n        this.setState({\n            works: this.filterArray(works, itemId),\n        });\n    }\n\n    render() {\n        const {\n            toggleMenu,\n            toggleModal,\n            toggleEditModal,\n            addItem,\n            handleEditChange,\n            editItem,\n            deleteItem\n        } = this;\n        const {\n            errors,\n            works,\n            tempWorkItem,\n            isEdited\n        } = this.state;\n        return (\n            <div className=\"WorkExp not-visible\">\n                <div className=\"work-header\">\n                    <div className=\"burger-menu\" onClick={toggleMenu}>\n                        <span className=\"line line-1\"></span>\n                        <span className=\"line line-2\"></span>\n                        <span className=\"line line-3\"></span>\n                    </div>\n                    <h2>Work Experiences</h2>\n                    {\n                        isEdited ?\n                        <div className=\"close-button-work not-visible\" onClick={toggleEditModal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                        </div> :\n                        <div className=\"close-button-work not-visible\" onClick={toggleModal}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                        </div>\n                    }\n                </div>\n                \n                {works.length > 0 ? (\n                    <div className=\"work-body\">\n                        {works.map((item, index) => {\n                            return (\n                                <div key={index} id={index} className=\"work-item\">\n                                    <div className=\"item-header\">\n                                        <span>{item.workStartDate}-{item.workEndDate || 'Present'}</span>\n                                        <div className=\"action-buttons\">\n                                            <svg onClick={toggleEditModal} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M7.127 22.564l-7.126 1.436 1.438-7.125 5.688 5.689zm-4.274-7.104l5.688 5.689 15.46-15.46-5.689-5.689-15.459 15.46z\"/></svg>\n                                            <svg onClick={deleteItem} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n                                        </div>\n                                    </div>\n                                    <div className=\"item-main\">\n                                        <p className=\"role-title\">{item.role}</p>\n                                        <p className=\"location\">{item.workCity}, {item.companyName}</p>\n                                    </div>\n                                    <div className=\"item-description\">\n                                        <p>{item.workDescr}</p>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                ) : (\n                    <div className=\"work-body\">\n                        <div className=\"image-container\">\n                            <img src={WorkImg} alt=\"work-experiences\" />\n                        </div>\n                        <div className=\"button-container\">\n                            <button onClick={toggleModal}>Add Work</button>\n                        </div>\n                    </div>                   \n                )}\n\n                <div className=\"work-modal not-visible\">\n                    <form>\n                        <div>\n                            <label>Company Name</label>\n                            {errors.companyName && <small className=\"error-pop-up\">{errors.companyName}</small>}\n                            {\n                                isEdited ?\n                                <input \n                                    type=\"text\"\n                                    id=\"companyName\"\n                                    onChange={handleEditChange}\n                                    value={tempWorkItem.companyName}\n                                    className=\"work-input-field\"\n                                /> :\n                                <input type=\"text\" id=\"companyName\" className=\"work-input-field\" />\n                            }\n                        </div>\n\n                        <div>\n                            <label>City</label>\n                            {errors.workCity && <small className=\"error-pop-up\">{errors.workCity}</small>}\n                            {\n                                isEdited ?\n                                <input\n                                    type=\"text\"\n                                    id=\"workCity\"\n                                    onChange={handleEditChange}\n                                    value={tempWorkItem.workCity}\n                                    className=\"work-input-field\"\n                                /> :\n                                <input type=\"text\" id=\"workCity\" className=\"work-input-field\" />\n                            }\n                        </div>\n\n                        <div className=\"period\">\n                            <div>\n                                <label>From</label>\n                                {errors.workStartDate && <small className=\"error-pop-up\">{errors.workStartDate}</small>}\n                                {\n                                    isEdited ?\n                                    <input\n                                        type=\"text\"\n                                        id=\"workStartDate\"\n                                        onChange={handleEditChange}\n                                        value={tempWorkItem.workStartDate}\n                                        className=\"work-input-field\"\n                                    /> :\n                                    <input type=\"text\" id=\"workStartDate\" className=\"work-input-field\" />\n                                }\n                            </div>\n                            <div>\n                                <label>\n                                    To\n                                    <small> (\"Present\" if empty)</small>\n                                </label>\n                                {errors.workEndDate && <small className=\"error-pop-up\">{errors.workEndDate}</small>}\n                                {\n                                    isEdited ?\n                                    <input\n                                        type=\"text\"\n                                        id=\"workEndDate\"\n                                        onChange={handleEditChange}\n                                        value={tempWorkItem.workEndDate !== 'Present' ? tempWorkItem.workEndDate : null}\n                                        className=\"work-input-field\"\n                                    /> :\n                                    <input type=\"text\" id=\"workEndDate\" className=\"work-input-field\" />\n                                }\n                            </div>\n                        </div>\n\n                        <div>\n                            <label>Role</label>\n                            {errors.role && <small className=\"error-pop-up\">{errors.role}</small>}\n                            {\n                                isEdited ?\n                                <input\n                                    type=\"text\"\n                                    id=\"role\"\n                                    onChange={handleEditChange}\n                                    value={tempWorkItem.role}\n                                    className=\"work-input-field\"\n                                /> :\n                                <input type=\"text\" id=\"role\" className=\"work-input-field\" />\n                            }\n                        </div>\n\n                        <div className=\"description\">\n                            <label>\n                                Description\n                                <small>(optional)</small>\n                            </label>\n                            {\n                                isEdited ?\n                                <textarea\n                                    rows=\"7\"\n                                    id=\"workDescr\"\n                                    onChange={handleEditChange}\n                                    value={tempWorkItem.workDescr}\n                                    className=\"work-input-field\"\n                                ></textarea> :\n                                <textarea rows=\"7\" id=\"workDescr\" className=\"work-input-field\"></textarea>\n                            }\n                        </div>\n                        {\n                            isEdited ?\n                            <button type=\"submit\" onClick={editItem}>Edit Work</button> :\n                            <button type=\"submit\" onClick={addItem}>Add Work</button>\n                        }\n                    </form>\n                </div>\n\n                {\n                    works.length > 0 &&\n                    <button className=\"add-work-btn\" onClick={toggleModal}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/></svg>\n                    </button>\n                }\n            </div>\n        )\n    }\n}\n\nexport default WorkExperiences;\n","import React, { Component } from 'react';\nimport Menu from './components/Menu';\nimport Main from './components/Main';\nimport PersonalInfo from './components/PersonalInfo';\nimport Education from './components/Education';\nimport WorkExperiences from './components/WorkExperiences';\nimport './scss/main.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu />\n        <Main />\n        <PersonalInfo />\n        <Education />\n        <WorkExperiences />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}